module Workarea
  decorate Storefront::Checkout::PaymentViewModel, with: :b2b do
    delegate :require_account_payment?, to: :account, allow_nil: true

    def account
      return unless options[:membership]&.account.present?

      @account ||= Storefront::AccountViewModel.wrap(
        options[:membership].account,
        options
      )
    end

    def credit_cards
      return super unless account.present? && require_account_payment?

      @account_credit_cards ||=
        payment.account_saved_credit_cards.map do |card|
          Storefront::CreditCardViewModel.new(
            card,
            selected: selected_payment_id
          )
        end
    end

    private

    def selected_payment_id
      if credit_card? && credit_card.saved_card_id.present?
        credit_card.saved_card_id
      elsif options[:payment].present?
        options[:payment]
      elsif account&.require_account_payment?
        payment&.account_default_credit_card&.id
      else
        payment&.default_credit_card&.id
      end
    end
  end
end
