module Workarea
  decorate Pricing::Collection, with: :b2b do
    def all_generic_prices
      records.flat_map(&:prices)
             .select { |p| p.generic? || p.generic_for_price_list? }
    end

    def retail_min_price
      return @retail_min_price if defined?(@retail_min_price)
      @retail_min_price = generic_retail_prices.map(&:regular).sort.first
    end

    def retail_max_price
      return @retail_max_price if defined?(@retail_max_price)
      @retail_max_price = generic_retail_prices.map(&:regular).sort.last
    end

    def pricing_list_pricing?
      generic_prices.any? { |p| p.price_list_id.present? }
    end

    private

    def generic_retail_prices
      @generic_retail_prices ||= records.map(&:prices).flatten.select(&:generic?)
    end

    def generic_prices
      @generic_prices ||= records.flat_map do |record|
        list_prices =
          if Current.price_list_id.present?
            record.prices.select { |p| p.price_list_id == Current.price_list_id }
          end

        list_prices.presence || record.prices.select(&:generic?)
      end
    end
  end
end
