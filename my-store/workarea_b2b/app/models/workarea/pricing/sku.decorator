module Workarea
  decorate Pricing::Sku, with: :b2b do
    def price_list_sell_price(price_list_id)
      find_price(quantity: 1, price_list_id: price_list_id).sell
    end

    def find_price(options = {})
      quantity = options[:quantity] || 1
      price_list_id = options[:price_list_id] || Current.price_list_id

      match =
        active_prices
          .select { |price| price.price_list_id == price_list_id }
          .detect { |price| quantity >= price.min_quantity }

      return match if match.present?

      match =
        active_prices
          .select { |price| price.price_list_id.blank? }
          .detect { |price| quantity >= price.min_quantity }

      match || Pricing::Price.new
    end
  end
end
